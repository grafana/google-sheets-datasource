version: 2.1
parameters:
  ssh-fingerprint:
    type: string
    default: "dc:60:ab:c7:2d:8c:82:50:2a:2a:97:1a:c0:66:83:14"

aliases:
  # Workflow filters
  - &filter-only-master
    branches:
      only: master

defaults: &defaults
  docker:
    - image: srclosson/grafana-plugin-ci:latest

jobs:
  build_plugin:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            yarn install --frozen-lockfile
      - run:
          name: Build and test frontend
          command:  |
            npx grafana-toolkit plugin:ci-build
            npx grafana-toolkit plugin:ci-build --finish
      - save_cache:
          paths:
            - ~/.cache
          key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - ci
  build_backend:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Build Backend
          command: |
            mage -v buildAll
      - run:
          name: Test Backend
          command: |
            mage -v lint
            mage -v coverage
      - run:
          name: Install dependencies
          command: |
            yarn install --frozen-lockfile
      - run:
          name: Move results to ci folder
          command:  |
            npx grafana-toolkit plugin:ci-build --finish
      - save_cache:
          paths:
            - ~/.cache
          key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - ci
  build_docs:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - run:
        name: Install dependencies
        command: |
          yarn install --frozen-lockfile
    - run:
        name: Build Docs
        command: |
          mkdir ci # Avoid error if not exists
          npx grafana-toolkit plugin:ci-docs
    - save_cache:
        paths:
        - ~/.cache
        key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - persist_to_workspace:
        root: .
        paths:
          - ci

  package:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - run:
        name: Package Distribution
        command: |
          yarn install --frozen-lockfile
          npx grafana-toolkit plugin:ci-package
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/package
        - ci/packages
        - ci/dist
        - ci/grafana-test-env

  provisioning:
    <<: *defaults
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
          - << pipeline.parameters.ssh-fingerprint >>
    - run:
        name: Checkout provisioning files
        command: git clone git@github.com:grafana/plugin-provisioning.git
    - run:
        name: Prepare task output dir
        command: |
          mkdir ci # Avoid error if not exists
          mkdir ci/jobs # Avoid error if not exists
          mkdir ci/jobs/provisioning
          mv plugin-provisioning/plugins/google-sheets/provisioning/* ci/jobs/provisioning
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/provisioning

  test_e2e:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - run:
        name: Setup Grafana (local install)
        command: |
          sudo dpkg -i /usr/local/grafana/deb/grafana_6.7.1_amd64.deb
          sudo cp ci/grafana-test-env/custom.ini /usr/share/grafana/conf/custom.ini
          sudo cp ci/grafana-test-env/custom.ini /etc/grafana/grafana.ini
          sudo service grafana-server start
          sudo grafana-cli --version
    - run:
        name: Install dependencies
        command: yarn install --frozen-lockfile
    - save_cache:
          paths:
            - ~/.cache
          key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - run:
        name: Copy provisioning files
        command: cp -r ci/jobs/provisioning provisioning/
    - run:
        name: Run e2e tests
        command: npx grafana-e2e run
    - run:
        when: always
        name: Prepare task output dir
        command: |
          # TODO: probably move all of this to `@grafana/toolkit plugin:ci-test`
          mkdir ci/jobs/test_e2e
          # only copy if they exist
          cp cypress/screenshots/*.* ci/jobs/test_e2e 2>/dev/null || :
          cp cypress/videos/*.* ci/jobs/test_e2e 2>/dev/null || :
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/test_e2e
    - store_test_results:
        path: ci/jobs/test_e2e
    - store_artifacts:
        path: ci/jobs/test_e2e

  report:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
    - run:
        name: Toolkit report
        command: |
          yarn install --frozen-lockfile
          npx grafana-toolkit plugin:ci-report
    - store_artifacts:
        path: ci

  publish_github_release:
    <<: *defaults
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - << pipeline.parameters.ssh-fingerprint >>
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: "Publish Release on GitHub"
          command: |
            yarn install --frozen-lockfile
            npx grafana-toolkit plugin:github-publish

workflows:
  plugin_workflow:
    jobs:
      - build_plugin
      - build_docs
      - build_backend
      - package:
          requires:
            - build_plugin
            - build_backend
            - build_docs
      - provisioning
      - test_e2e:
          requires:
            - package
            - provisioning
      - report:
          requires:
            - test_e2e
      - approve_release:
          type: approval
          requires:
            - report
          filters: *filter-only-master
      - publish_github_release:
          requires:
            - approve_release
          filters: *filter-only-master
