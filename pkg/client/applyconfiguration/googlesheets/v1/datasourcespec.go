// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// DatasourceSpecApplyConfiguration represents an declarative configuration of the DatasourceSpec type for use
// with apply.
type DatasourceSpecApplyConfiguration struct {
	AuthType           *string `json:"authType,omitempty"`
	APIKey             *string `json:"apiKey,omitempty"`
	DefaultProject     *string `json:"defaultProject,omitempty"`
	JWT                *string `json:"jwt,omitempty"`
	ClientEmail        *string `json:"clientEmail,omitempty"`
	TokenURI           *string `json:"tokenUri,omitempty"`
	AuthenticationType *string `json:"authenticationType,omitempty"`
	PrivateKeyPath     *string `json:"privateKeyPath,omitempty"`
	PrivateKey         *string `json:"privateKey,omitempty"`
}

// DatasourceSpecApplyConfiguration constructs an declarative configuration of the DatasourceSpec type for use with
// apply.
func DatasourceSpec() *DatasourceSpecApplyConfiguration {
	return &DatasourceSpecApplyConfiguration{}
}

// WithAuthType sets the AuthType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthType field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithAuthType(value string) *DatasourceSpecApplyConfiguration {
	b.AuthType = &value
	return b
}

// WithAPIKey sets the APIKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIKey field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithAPIKey(value string) *DatasourceSpecApplyConfiguration {
	b.APIKey = &value
	return b
}

// WithDefaultProject sets the DefaultProject field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DefaultProject field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithDefaultProject(value string) *DatasourceSpecApplyConfiguration {
	b.DefaultProject = &value
	return b
}

// WithJWT sets the JWT field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the JWT field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithJWT(value string) *DatasourceSpecApplyConfiguration {
	b.JWT = &value
	return b
}

// WithClientEmail sets the ClientEmail field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientEmail field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithClientEmail(value string) *DatasourceSpecApplyConfiguration {
	b.ClientEmail = &value
	return b
}

// WithTokenURI sets the TokenURI field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TokenURI field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithTokenURI(value string) *DatasourceSpecApplyConfiguration {
	b.TokenURI = &value
	return b
}

// WithAuthenticationType sets the AuthenticationType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthenticationType field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithAuthenticationType(value string) *DatasourceSpecApplyConfiguration {
	b.AuthenticationType = &value
	return b
}

// WithPrivateKeyPath sets the PrivateKeyPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrivateKeyPath field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithPrivateKeyPath(value string) *DatasourceSpecApplyConfiguration {
	b.PrivateKeyPath = &value
	return b
}

// WithPrivateKey sets the PrivateKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrivateKey field is set to the value of the last call.
func (b *DatasourceSpecApplyConfiguration) WithPrivateKey(value string) *DatasourceSpecApplyConfiguration {
	b.PrivateKey = &value
	return b
}
